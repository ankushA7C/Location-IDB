{"version":3,"sources":["noLocation.png","Service/IDBService.js","Components/Header/index.js","Components/Header/component/Header.js","Components/LocationForm/index.js","Components/LocationForm/component/locationForm.js","Components/DialogBox/index.js","Components/DialogBox/component/dialogBox.js","Routes/AddLocation/component/addLocation.js","Routes/AddLocation/index.js","Components/About/index.js","Components/About/component/About.js","Routes/ViewLocation/index.js","Routes/ViewLocation/component/viewLocation.js","Components/Particle/index.js","Components/Particle/component/Particle.js","Routes/Home/index.js","Routes/Home/component/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","IDBService","openDB","upgrade","db","createObjectStore","data","db2","add","key","then","result","getAll","put","console","log","catch","err","error","close","delete","Header","withRouter","props","className","href","onClick","history","push","locationForm","withStyles","theme","fz","fontSize","timeZone","width","paddingTop","state","appointment","height","marginTop","classes","Fragment","Typography","gutterBottom","Grid","container","spacing","item","xs","sm","TextField","required","id","name","label","fullWidth","autoComplete","value","locationName","InputLabelProps","style","inputProps","onChange","address1","suitNo","address2","city","FormControl","InputLabel","Select","filled","labelId","MenuItem","zipCode","maxLength","phoneNumber","onChangeForPhoneNumber","timeZoneList","map","index","facilityTime","handleDialog","appPool","chip","addChipItems","Button","variant","color","onCancel","onSubmit","DialogBox","Dialog","disableBackdropClick","disableEscapeKeyDown","open","onClose","DialogTitle","DialogContent","ref","ref_sunday","type","onCheckBoxClick","format","mask","onChangeHandler","sunday","fromDate","toDate","onApplyToAll","ref_monday","monday","ref_tuesday","tuesday","ref_wednesday","wednesday","ref_thursday","thursday","ref_friday","friday","ref_saturday","saturday","DialogActions","padding","initialState","check_sunday","check_monday","check_tuesday","check_wednesday","check_thursday","check_friday","check_saturday","Date","getTime","AddLocation","e","setState","target","alert","_db","insertValues","timeZonesList","momentTZ","tz","names","componentDidMount","dbKey","onlyNums","replace","length","number","refs","days","data_index","checkDay","current","childNodes","firstChild","fromDateValue","toDateValue","substring","toData","React","createRef","this","Component","addLocation","About","src","frameborder","allow","allowfullscreen","title","cursor","viewLocation","useState","columns","field","useEffect","getTableData","idb","getData","NoLocation","options","search","actionsColumnIndex","headerStyle","fontWeight","tbodyStyle","backgroundColor","rowStyle","editable","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","tableData","prevState","indexOf","updateData","onRowDelete","splice","deleteData","delteTableData","Particle","params","Home","exact","path","render","App","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.304ee489.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noLocation.e6669fd4.png\";","import { openDB } from \"idb\";\r\n\r\nconst DATABASE_NAME = 'Location-Data';\r\nconst DATABASE_VERSION = 2;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n    upgrade(db) {\r\n        db.createObjectStore(\"location\");\r\n    }\r\n});\r\n\r\n\r\nexport class IDBService {\r\n\r\n    async insertValues(data) {\r\n        const db2 = await openDB(DATABASE_NAME, DATABASE_VERSION);\r\n        return db2.add(\"location\", data, data.key).then(result => {\r\n            return result;\r\n        });\r\n    }\r\n\r\n    async getData() {\r\n        const db2 = await openDB(\"Location-Data\", 2);\r\n        return db2.getAll(\"location\").then(result => {\r\n            return result;\r\n        });\r\n    }\r\n\r\n    async updateData(data) {\r\n        const db2 = await openDB(\"Location-Data\", 2);\r\n        db2\r\n            .put(\"location\", data, data.key)\r\n            .then(result => {\r\n                console.log(\"Updated Data\", result);\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Failed to Update data: \", err);\r\n            });\r\n\r\n        db2.close();\r\n    }\r\n\r\n    async deleteData(data) {\r\n        const db2 = await openDB(\"Location-Data\", 2);\r\n        db2\r\n            .delete(\"location\", data.key)\r\n            .then(result => {\r\n                console.log(\"Data Deleted\", result);\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Failed to Delte data: \", err);\r\n            });\r\n\r\n        db2.close();\r\n    }\r\n\r\n}","import Header from \"./component/Header\";\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <div className=\"col-md-12\">\r\n            <div className=\"row margin-0 bottom-br\">\r\n                <div className=\"col-md-9\">\r\n                    <div className=\"locationTitle\">  <a href=\"/\"> Location</a></div>\r\n                </div>\r\n                <div className=\"col-md-3 pd-40\">\r\n                    <div className=\"addLocation\" onClick={() => props.history.push(\"/addLocation\")}>Add Location</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Header);","import locationForm from \"./component/locationForm\";\r\n\r\nexport default locationForm;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport ChipInput from 'material-ui-chip-input'\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    fz: {\r\n        fontSize: 12\r\n    },\r\n    timeZone: {\r\n        fontSize: 12,\r\n        width: 220,\r\n        paddingTop: 4\r\n    },\r\n    state: {\r\n        fontSize: 12,\r\n        width: 95,\r\n        paddingTop: 2\r\n\r\n    },\r\n    appointment: {\r\n        height: 55,\r\n        marginTop: -10\r\n    }\r\n});\r\nconst LocationForm = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n\r\n        <div className=\"col-md-12\">\r\n            <div className=\"form-container\">\r\n                <div className=\"locationForm\">\r\n                    <React.Fragment>\r\n                        <Typography gutterBottom>\r\n                            Add Locations\r\n                             </Typography>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"locationName\"\r\n                                    name=\"locationName\"\r\n                                    label=\"Location Name\"\r\n                                    fullWidth\r\n                                    autoComplete=\"given-name\"\r\n                                    value={props.locationName}\r\n                                    InputLabelProps={{ style: { fontSize: 12 } }}\r\n                                    inputProps={{ style: { fontSize: 14 } }}\r\n                                    onChange={props.onChange}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={6}>\r\n                                <TextField\r\n                                    id=\"address1\"\r\n                                    name=\"address1\"\r\n                                    label=\"Address line 1\"\r\n                                    fullWidth\r\n                                    value={props.address1}\r\n                                    InputLabelProps={{ style: { fontSize: 12 } }}\r\n                                    inputProps={{ style: { fontSize: 14 } }}\r\n                                    onChange={props.onChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField\r\n                                    id=\"suitNo\"\r\n                                    name=\"suitNo\"\r\n                                    label=\"Suit No.\"\r\n                                    fullWidth\r\n                                    value={props.suitNo}\r\n                                    InputLabelProps={{ style: { fontSize: 12 } }}\r\n                                    inputProps={{ style: { fontSize: 14 } }}\r\n                                    onChange={props.onChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <TextField\r\n                                    id=\"address2\"\r\n                                    name=\"address2\"\r\n                                    label=\"Address line 2\"\r\n                                    fullWidth\r\n                                    value={props.address2}\r\n                                    autoComplete=\"shipping address-line2\"\r\n                                    InputLabelProps={{ style: { fontSize: 12 } }}\r\n                                    inputProps={{ style: { fontSize: 14 } }}\r\n                                    onChange={props.onChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3}>\r\n                                <TextField\r\n                                    id=\"city\"\r\n                                    name=\"city\"\r\n                                    label=\"City\"\r\n                                    fullWidth\r\n                                    value={props.city}\r\n                                    InputLabelProps={{ style: { fontSize: 12 } }}\r\n                                    inputProps={{ style: { fontSize: 14 } }}\r\n                                    onChange={props.onChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3}>\r\n                                <FormControl >\r\n\r\n                                    <InputLabel id=\"state\"\r\n                                        className={classes.fz}\r\n                                    >State</InputLabel>\r\n                                    <Select\r\n                                        filled\r\n                                        labelId=\"state\"\r\n                                        id=\"state\"\r\n                                        name=\"state\"\r\n                                        className={classes.state}\r\n                                        value={props.state}\r\n                                        onChange={props.onChange}\r\n                                    >\r\n                                        <MenuItem value=\"Andhra Pradesh\">Andhra Pradesh</MenuItem>\r\n                                        <MenuItem value=\"Arunachal Pradesh\">Arunachal Pradesh</MenuItem>\r\n                                        <MenuItem value=\"Assam\">Assam</MenuItem>\r\n                                        <MenuItem value=\"Bihar\">Bihar</MenuItem>\r\n                                        <MenuItem value=\"Chhattisgarh\">Chhattisgarh</MenuItem>\r\n                                        <MenuItem value=\"Delhi\">Delhi</MenuItem>\r\n                                        <MenuItem value=\"Goa\">Goa</MenuItem>\r\n                                        <MenuItem value=\"Gujarat\">Gujarat</MenuItem>\r\n                                        <MenuItem value=\"Haryana\">Haryana</MenuItem>\r\n                                        <MenuItem value=\"Himachal Pradesh\">Himachal Pradesh</MenuItem>\r\n                                        <MenuItem value=\"Jharkhand\">Jharkhand</MenuItem>\r\n                                        <MenuItem value=\"Karnataka\">Karnataka</MenuItem>\r\n                                        <MenuItem value=\"Kerala\">Kerala</MenuItem>\r\n                                        <MenuItem value=\"Madhya Pradesh\">Madhya Pradesh</MenuItem>\r\n                                        <MenuItem value=\"Maharashtra\">Maharashtra</MenuItem>\r\n                                        <MenuItem value=\"Manipur\">Manipur</MenuItem>\r\n                                        <MenuItem value=\"Meghalaya\">Meghalaya</MenuItem>\r\n                                        <MenuItem value=\"Mizoram\">Mizoram</MenuItem>\r\n                                        <MenuItem value=\"Nagaland\">Nagaland</MenuItem>\r\n                                        <MenuItem value=\"Odisha\">Odisha</MenuItem>\r\n                                        <MenuItem value=\"Punjab\">Punjab</MenuItem>\r\n                                        <MenuItem value=\"Rajasthan\">Rajasthan</MenuItem>\r\n                                        <MenuItem value=\"Sikkim\">Sikkim</MenuItem>\r\n                                        <MenuItem value=\"Tamil Nadu\">Tamil Nadu</MenuItem>\r\n                                        <MenuItem value=\"Telangana\">Telangana</MenuItem>\r\n                                        <MenuItem value=\"Tripura\">Tripura</MenuItem>\r\n                                        <MenuItem value=\"Uttar Pradesh\">Uttar Pradesh</MenuItem>\r\n                                        <MenuItem value=\"Uttarakhand\">Uttarakhand</MenuItem>\r\n                                        <MenuItem value=\"West Bengal\">West Bengal</MenuItem>\r\n\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3}>\r\n                                <TextField\r\n                                    id=\"zipCode\"\r\n                                    name=\"zipCode\"\r\n                                    label=\"Zip Code\"\r\n                                    fullWidth\r\n                                    value={props.zipCode}\r\n                                    InputLabelProps={{ style: { fontSize: 12 } }}\r\n                                    inputProps={{ style: { fontSize: 14 } }, { maxLength: 10 }}\r\n                                    onChange={props.onChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3}>\r\n                                <TextField\r\n                                    id=\"phoneNumber\"\r\n                                    name=\"phoneNumber\"\r\n                                    label=\"Phone Number\"\r\n                                    fullWidth\r\n                                    value={props.phoneNumber}\r\n                                    InputLabelProps={{ style: { fontSize: 12 } }}\r\n                                    inputProps={{ style: { fontSize: 14 } }, { maxLength: 10 }}\r\n                                    onChange={props.onChangeForPhoneNumber}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <FormControl >\r\n                                    <InputLabel id=\"timeZone\"\r\n                                        className={classes.fz}\r\n                                    >Time Zone</InputLabel>\r\n                                    <Select\r\n                                        filled\r\n                                        labelId=\"timeZone\"\r\n                                        id=\"timeZone\"\r\n                                        name=\"timeZone\"\r\n                                        value={props.timeZone}\r\n\r\n                                        className={classes.timeZone}\r\n                                        onChange={props.onChange}\r\n                                    >\r\n                                        {props.timeZoneList && props.timeZoneList.map((data, index) => <MenuItem key={index} value={data}>{data}</MenuItem>)}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    id=\"facilityTime\"\r\n                                    name=\"facilityTime\"\r\n                                    label=\"Facility Times\"\r\n                                    fullWidth\r\n                                    value={props.facilityTime}\r\n                                    InputLabelProps={{ style: { fontSize: 12 } }}\r\n                                    inputProps={{ style: { fontSize: 14 } }}\r\n                                    onChange={props.onChange}\r\n                                    onClick={props.handleDialog}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <ChipInput\r\n                                    label=\"Appointment Pool\"\r\n                                    id=\"appPool\"\r\n                                    name=\"appPool\"\r\n                                    value={props.appPool}\r\n                                    className={classes.appointment}\r\n                                    onChange={(chip) => props.addChipItems(chip)}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <div className=\"buttons\">\r\n                                    <div className=\"margin-5\"><Button variant=\"contained\" color=\"secondary\" onClick={props.onCancel}>Cancel</Button></div>\r\n                                    <div className=\"margin-5\"><Button variant=\"contained\" color=\"primary\" onClick={props.onSubmit}>Save</Button></div>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </React.Fragment>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(LocationForm);;","import DialogBox from \"./component/dialogBox\";\r\n\r\nexport default DialogBox;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport NumberFormat from 'react-number-format';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nconst styles = theme => ({\r\n    fz: {\r\n        fontSize: 12\r\n    },\r\n    timeZone: {\r\n        fontSize: 12,\r\n        width: 220,\r\n        paddingTop: 4\r\n    },\r\n    state: {\r\n        fontSize: 12,\r\n        width: 95,\r\n        paddingTop: 2\r\n\r\n    },\r\n    appointment: {\r\n        height: 55,\r\n        marginTop: -10\r\n    }\r\n});\r\nconst DialogBox = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n\r\n        <Dialog disableBackdropClick disableEscapeKeyDown open={props.open} onClose={props.handleDialog}>\r\n            <DialogTitle>Facility Times</DialogTitle>\r\n            <DialogContent>\r\n                <div className=\"facility-Container\">\r\n                    <table>\r\n                        <tbody>\r\n                            <tr className=\"table-row\">\r\n                                <td className=\"day-Column\"></td>\r\n                                <td className=\"from-Date header-table\">From</td>\r\n                                <td className=\"to-Date header-table\">To</td>\r\n                                <td className=\"apply-btn\"></td>\r\n                            </tr>\r\n                            <tr className=\"table-row\" ref={props.ref_sunday}>\r\n                                <td className=\"day-Column\"><input className=\"checkBox-Day\" type=\"checkbox\" id=\"sun\" name=\"check_sunday\" value=\"Sunday\" onClick={props.onCheckBoxClick} /><label className=\"dayName\">Sun</label></td>\r\n                                <td className=\"from-Date\"><NumberFormat id=\"fromDate\" format=\"##:##\" mask={['H', 'H', 'M', 'M']} onChange={() => props.onChangeHandler(0)} value={props.sunday.fromDate} /><div className=\"from-Date-img\"><div className=\"am-Time bgc-blue\">AM</div><div className=\"pm-Time bgc-grey\">PM</div></div></td>\r\n                                <td className=\"to-Date\"><NumberFormat id=\"toDate\" format=\"##:##\" mask={['H', 'H', 'M', 'M']} onChange={() => props.onChangeHandler(0)} value={props.sunday.toDate} /><div className=\"to-Date-img\"><div className=\"am-Time bgc-grey\">AM</div><div className=\"pm-Time bgc-blue\">PM</div></div></td>\r\n                                <td className=\"apply-btn\"><div className=\"button-Apply\" onClick={() => props.onApplyToAll(0)}>Apply To All Checked</div></td>\r\n                            </tr>\r\n                            <tr className=\"table-row margin-25\" ref={props.ref_monday}>\r\n                                <td className=\"day-Column\"><input className=\"checkBox-Day\" type=\"checkbox\" id=\"mon\" name=\"check_monday\" value=\"Monday\" onChange={props.onCheckBoxClick} /><label className=\"dayName\">Mon</label></td>\r\n                                <td className=\"from-Date\"><NumberFormat id=\"fromDate\" format=\"##:##\" mask={['H', 'H', 'M', 'M']} onChange={() => props.onChangeHandler(1)} value={props.monday.fromDate} /><div className=\"from-Date-img\"><div className=\"am-Time bgc-blue\">AM</div><div className=\"pm-Time bgc-grey\">PM</div></div></td>\r\n                                <td className=\"to-Date\"><NumberFormat id=\"toDate\" format=\"##:##\" mask={['H', 'H', 'M', 'M']} onChange={() => props.onChangeHandler(1)} value={props.monday.toDate} /><div className=\"to-Date-img\"><div className=\"am-Time bgc-grey\">AM</div><div className=\"pm-Time bgc-blue\">PM</div></div></td>\r\n                                <td className=\"apply-btn\"><div className=\"button-Apply\" onClick={() => props.onApplyToAll(1)}>Apply To All Checked</div></td>\r\n                            </tr>\r\n                            <tr className=\"table-row margin-25\" ref={props.ref_tuesday}>\r\n                                <td className=\"day-Column\"><input className=\"checkBox-Day\" type=\"checkbox\" id=\"tue\" name=\"check_tuesday\" value=\"Tuesday\" onChange={props.onCheckBoxClick} /><label className=\"dayName\">Tue</label></td>\r\n                                <td className=\"from-Date\"><NumberFormat id=\"fromDate\" format=\"##:##\" mask={['H', 'H', 'M', 'M']} onChange={() => props.onChangeHandler(2)} value={props.tuesday.fromDate} /><div className=\"from-Date-img\"><div className=\"am-Time bgc-blue\">AM</div><div className=\"pm-Time bgc-grey\">PM</div></div></td>\r\n                                <td className=\"to-Date\"><NumberFormat id=\"toDate\" format=\"##:##\" mask={['H', 'H', 'M', 'M']} onChange={() => props.onChangeHandler(2)} value={props.tuesday.toDate} /><div className=\"to-Date-img\"><div className=\"am-Time bgc-grey\">AM</div><div className=\"pm-Time bgc-blue\">PM</div></div></td>\r\n                                <td className=\"apply-btn\"><div className=\"button-Apply\" onClick={() => props.onApplyToAll(2)}>Apply To All Checked</div></td>\r\n                            </tr>\r\n                            <tr className=\"table-row margin-25\" ref={props.ref_wednesday}>\r\n                                <td className=\"day-Column\"><input className=\"checkBox-Day\" type=\"checkbox\" id=\"wed\" name=\"check_wednesday\" value=\"Wednesday\" onChange={props.onCheckBoxClick} /><label className=\"dayName\">Wed</label></td>\r\n                                <td className=\"from-Date\"><NumberFormat id=\"fromDate\" format=\"##:##\" mask={['H', 'H', 'M', 'M']} onChange={() => props.onChangeHandler(3)} value={props.wednesday.fromDate} /><div className=\"from-Date-img\"><div className=\"am-Time bgc-blue\">AM</div><div className=\"pm-Time bgc-grey\">PM</div></div></td>\r\n                                <td className=\"to-Date\"><NumberFormat id=\"toDate\" format=\"##:##\" mask={['H', 'H', 'M', 'M']} onChange={() => props.onChangeHandler(3)} value={props.wednesday.toDate} /><div className=\"to-Date-img\"><div className=\"am-Time bgc-grey\">AM</div><div className=\"pm-Time bgc-blue\">PM</div></div></td>\r\n                                <td className=\"apply-btn\"><div className=\"button-Apply\" onClick={() => props.onApplyToAll(3)}>Apply To All Checked</div></td>\r\n                            </tr>\r\n                            <tr className=\"table-row margin-25\" ref={props.ref_thursday}>\r\n                                <td className=\"day-Column\"><input className=\"checkBox-Day\" type=\"checkbox\" id=\"thu\" name=\"check_thursday\" value=\"Thursday\" onChange={props.onCheckBoxClick} /><label className=\"dayName\">Thu</label></td>\r\n                                <td className=\"from-Date\"><NumberFormat id=\"fromDate\" format=\"##:##\" mask={['H', 'H', 'M', 'M']} onChange={() => props.onChangeHandler(4)} value={props.thursday.fromDate} /><div className=\"from-Date-img\"><div className=\"am-Time bgc-blue\">AM</div><div className=\"pm-Time bgc-grey\">PM</div></div></td>\r\n                                <td className=\"to-Date\"><NumberFormat id=\"toDate\" format=\"##:##\" mask={['H', 'H', 'M', 'M']} onChange={() => props.onChangeHandler(4)} value={props.thursday.toDate} /><div className=\"to-Date-img\"><div className=\"am-Time bgc-grey\">AM</div><div className=\"pm-Time bgc-blue\">PM</div></div></td>\r\n                                <td className=\"apply-btn\"><div className=\"button-Apply\" onClick={() => props.onApplyToAll(4)}>Apply To All Checked</div></td>\r\n                            </tr>\r\n                            <tr className=\"table-row margin-25\" ref={props.ref_friday}>\r\n                                <td className=\"day-Column\"><input className=\"checkBox-Day\" type=\"checkbox\" id=\"fri\" name=\"check_friday\" value=\"Friday\" onChange={props.onCheckBoxClick} /><label className=\"dayName\">Fir</label></td>\r\n                                <td className=\"from-Date\"><NumberFormat id=\"fromDate\" format=\"##:##\" mask={['H', 'H', 'M', 'M']} onChange={() => props.onChangeHandler(5)} value={props.friday.fromDate} /><div className=\"from-Date-img\"><div className=\"am-Time bgc-blue\">AM</div><div className=\"pm-Time bgc-grey\">PM</div></div></td>\r\n                                <td className=\"to-Date\"><NumberFormat id=\"toDate\" format=\"##:##\" mask={['H', 'H', 'M', 'M']} onChange={() => props.onChangeHandler(5)} value={props.friday.toDate} /><div className=\"to-Date-img\"><div className=\"am-Time bgc-grey\">AM</div><div className=\"pm-Time bgc-blue\">PM</div></div></td>\r\n                                <td className=\"apply-btn\"><div className=\"button-Apply\" onClick={() => props.onApplyToAll(5)}>Apply To All Checked</div></td>\r\n                            </tr>\r\n                            <tr className=\"table-row margin-25\" ref={props.ref_saturday}>\r\n                                <td className=\"day-Column\"><input className=\"checkBox-Day\" type=\"checkbox\" id=\"sat\" name=\"check_saturday\" value=\"Saturday\" onChange={props.onCheckBoxClick} /><label className=\"dayName\">Sat</label></td>\r\n                                <td className=\"from-Date\"><NumberFormat id=\"sat-fromDate\" className=\"fromDate\" format=\"##:##\" mask={['H', 'H', 'M', 'M']} onChange={() => props.onChangeHandler(6)} value={props.saturday.fromDate} /><div className=\"from-Date-img\"><div className=\"am-Time bgc-blue\">AM</div><div className=\"pm-Time bgc-grey\">PM</div></div></td>\r\n                                <td className=\"to-Date\"><NumberFormat id=\"sat-toDate\" className=\"toDate\" format=\"##:##\" mask={['H', 'H', 'M', 'M']} onChange={() => props.onChangeHandler(6)} value={props.saturday.toDate} /><div className=\"to-Date-img\"><div className=\"am-Time bgc-grey\">AM</div><div className=\"pm-Time bgc-blue\">PM</div></div></td>\r\n                                <td className=\"apply-btn\"><div className=\"button-Apply\" id=\"sat\" onClick={() => props.onApplyToAll(6)}>Apply To All Checked</div></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions style={{ padding: \"20px 28px\" }}>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={props.handleDialog}>Cancel</Button>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={props.handleDialog}>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(DialogBox);;","import React from \"react\";\r\nimport \"./style.css\";\r\nimport { withStyles } from '@material-ui/styles';\r\nimport PropTypes from 'prop-types';\r\nimport momentTZ from 'moment-timezone';\r\nimport { IDBService } from \"../../../Service/IDBService\"\r\nimport LocationForm from \"../../../Components/LocationForm/index\"\r\nimport DialogBox from \"../../../Components/DialogBox/index\"\r\n\r\nconst styles = theme => ({\r\n    fz: {\r\n        fontSize: 12\r\n    },\r\n    timeZone: {\r\n        fontSize: 12,\r\n        width: 220,\r\n        paddingTop: 4\r\n    },\r\n    state: {\r\n        fontSize: 12,\r\n        width: 95,\r\n        paddingTop: 2\r\n\r\n    },\r\n    appointment: {\r\n        height: 55,\r\n        marginTop: -10\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    locationName: '',\r\n    address1: '',\r\n    address2: '',\r\n    suitNo: '',\r\n    city: '',\r\n    state: '',\r\n    zipCode: '',\r\n    phoneNumber: '',\r\n    timeZone: '',\r\n    facilityTime: '',\r\n    appPool: [],\r\n    open: false,\r\n\r\n    check_sunday: false,\r\n    check_monday: false,\r\n    check_tuesday: false,\r\n    check_wednesday: false,\r\n    check_thursday: false,\r\n    check_friday: false,\r\n    check_saturday: false,\r\n\r\n    sunday: {\r\n        fromDate: '',\r\n        toDate: ''\r\n    },\r\n    monday: {\r\n        fromDate: '',\r\n        toDate: ''\r\n    },\r\n    tuesday: {\r\n        fromDate: '',\r\n        toDate: ''\r\n    },\r\n    wednesday: {\r\n        fromDate: '',\r\n        toDate: ''\r\n    },\r\n    thursday: {\r\n        fromDate: '',\r\n        toDate: ''\r\n    },\r\n    friday: {\r\n        fromDate: '',\r\n        toDate: ''\r\n    },\r\n    saturday: {\r\n        fromDate: '',\r\n        toDate: ''\r\n    },\r\n    key: new Date().getTime(),\r\n    timeZoneList: []\r\n};\r\n\r\nclass AddLocation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this._db = new IDBService();\r\n        this.state = initialState;\r\n        this.sunday = React.createRef();\r\n        this.monday = React.createRef();\r\n        this.tuesday = React.createRef();\r\n        this.wednesday = React.createRef();\r\n        this.thursday = React.createRef();\r\n        this.friday = React.createRef();\r\n        this.saturday = React.createRef();\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = () => {\r\n        if (this.state.locationName == '') {\r\n            alert(\"Please fill the form details.\")\r\n        } else {\r\n            this._db.insertValues(this.state).then(result => {\r\n                this.props.history.push(\"/\");\r\n            }\r\n            );\r\n        }\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.setState(initialState);\r\n        const timeZonesList = momentTZ.tz.names();\r\n        this.setState({ timeZoneList: timeZonesList });\r\n    }\r\n\r\n    handleDialog = () => {\r\n        this.setState({ open: !this.state.open });\r\n    }\r\n\r\n    addChipItems = (chip) => {\r\n        this.setState({ appPool: chip });\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const timeZonesList = momentTZ.tz.names();\r\n        this.setState({ timeZoneList: timeZonesList, key: this.props.dbKey });\r\n    }\r\n\r\n    onChangeForPhoneNumber = (e) => {\r\n        const onlyNums = e.target.value.replace(/[^0-9]/g, '');\r\n        if (onlyNums.length < 10) {\r\n            this.setState({ phoneNumber: onlyNums });\r\n        } else if (onlyNums.length === 10) {\r\n            const number = onlyNums.replace(\r\n                /(\\d{3})(\\d{3})(\\d{4})/,\r\n                '($1) $2-$3'\r\n            );\r\n            this.setState({ phoneNumber: number });\r\n        }\r\n    }\r\n\r\n\r\n    onApplyToAll = (index) => {\r\n        const refs = [this.sunday, this.monday, this.tuesday, this.wednesday, this.thursday, this.friday, this.saturday];\r\n        const days = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\r\n\r\n        let dataMap = days.map((data, data_index) => {\r\n            let checkDay = \"check_\" + data;\r\n            if (this.state[checkDay]) {\r\n                this.setState({\r\n\r\n                    [days[data_index]]:\r\n                    {\r\n                        fromDate: refs[index].current.childNodes[1].firstChild.value,\r\n                        toDate: refs[index].current.childNodes[2].firstChild.value\r\n                    }\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeHandler = (index) => {\r\n        const refs = [this.sunday, this.monday, this.tuesday, this.wednesday, this.thursday, this.friday, this.saturday];\r\n        const days = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\r\n        let fromDateValue = refs[index].current.childNodes[1].firstChild.value;\r\n        let toDateValue = refs[index].current.childNodes[2].firstChild.value;\r\n        if ((fromDateValue.substring(0, 2) > 24) || (fromDateValue.substring(3) > 60) || (toDateValue.substring(0, 2) > 24) || (toDateValue.substring(3) > 60)) {\r\n            alert(\"Please Enter Valid Time\");\r\n        }\r\n        else {\r\n            this.setState({\r\n                [days[index]]:\r\n                {\r\n                    fromDate: fromDateValue,\r\n                    toData: toDateValue\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onCheckBoxClick = (e) => {\r\n        this.setState({ [e.target.name]: !this.state[e.target.name] });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <>\r\n                < LocationForm {...this.state}\r\n                    key=\"1\"\r\n                    onChange={this.onChange}\r\n                    onSubmit={this.onSubmit}\r\n                    onCancel={this.onCancel}\r\n                    handleDialog={this.handleDialog}\r\n                    onChangeForPhoneNumber={this.onChangeForPhoneNumber}\r\n                    addChipItems={this.addChipItems}\r\n\r\n                />\r\n\r\n                <DialogBox  {...this.state}\r\n                    key=\"2\"\r\n                    handleDialog={this.handleDialog}\r\n                    onCheckBoxClick={this.onCheckBoxClick}\r\n                    onChangeHandler={this.onChangeHandler}\r\n                    onApplyToAll={this.onApplyToAll}\r\n                    ref_sunday={this.sunday}\r\n                    ref_monday={this.monday}\r\n                    ref_tuesday={this.tuesday}\r\n                    ref_wednesday={this.wednesday}\r\n                    ref_thursday={this.thursday}\r\n                    ref_friday={this.friday}\r\n                    ref_saturday={this.saturday}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\nAddLocation.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(AddLocation);","import addLocation from \"./component/addLocation\";\r\n\r\nexport default addLocation;\r\n","import About from \"./component/About\"\r\nexport default About;","import React from 'react';\r\nimport './style.css';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport BookIcon from '@material-ui/icons/Book';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\n\r\nexport default function About() {\r\n    return (\r\n        <div className=\"about-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <iframe className=\"custom-css\" src={'https://www.youtube.com/embed/Fbvn77jC4mU'}\r\n                        frameborder='0'\r\n                        allow='autoplay; encrypted-media'\r\n                        allowfullscreen\r\n                        title='video'\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-12 text-align-center m-15\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\"><a href=\"https://github.com/ankushA7C\" target=\"_blank\"><GitHubIcon style={{ fontSize: 70, color: 'white', cursor: 'pointer' }} /></a></div>\r\n                        <div className=\"col-md-3\"><a href=\"https://in.linkedin.com/in/ankush-chourasia-57632012a\" target=\"_blank\"><LinkedInIcon style={{ fontSize: 80, color: 'white', cursor: 'pointer' }} /></a></div>\r\n                        <div className=\"col-md-3\"><a href=\"https://twitter.com/ankusha7c\" target=\"_blank\"><TwitterIcon style={{ fontSize: 70, color: 'white', cursor: 'pointer' }} /></a></div>\r\n                        <div className=\"col-md-3\"><a href=\"https://iamtechnicaldeveloper.blogspot.com/\" target=\"_blank\"><BookIcon style={{ fontSize: 70, color: 'white', cursor: 'pointer' }} /></a></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import viewLocation from \"./component/viewLocation\";\r\n\r\nexport default viewLocation;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport MaterialTable from 'material-table';\r\nimport NoLocation from \"../../../noLocation.png\"\r\nimport About from \"../../../Components/About/index\"\r\n\r\nexport default function ViewLocation(props) {\r\n    const [state, setState] = React.useState({\r\n        columns: [\r\n            { title: 'Location Name', field: 'locationName' },\r\n            { title: 'Address', field: 'address1' },\r\n            { title: 'Phone No', field: 'phoneNumber' },\r\n        ],\r\n        data: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        getTableData();\r\n    }, []);\r\n\r\n    let getTableData = () => {\r\n        let data = props.idb.getData().then(result => {\r\n            setState({ ...state, data: result });\r\n        });\r\n    }\r\n\r\n    let updateTableData = (data) => {\r\n        let updateStatus = props.idb.updateData(data);\r\n    }\r\n    let delteTableData = (index) => {\r\n        let updateStatus = props.idb.deleteData(state.data[index]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-md-6\">\r\n                {!state.data.length && (<div className=\"noLocation\">\r\n                    <img src={NoLocation} className=\"noLocation-img\"></img>\r\n                    <div className=\"no-location-title\">No location found</div>\r\n                    <div className=\"no-location-title\">Please Add location</div>\r\n                </div>)}\r\n                {state.data.length > 0 && (<MaterialTable\r\n                    title=\"Location\"\r\n                    options={{\r\n                        search: false,\r\n                        actionsColumnIndex: -1,\r\n                        headerStyle: {\r\n                            fontSize: '14px',\r\n                            fontWeight: '700'\r\n                        },\r\n                        tbodyStyle: {\r\n                            backgroundColor: 'black'\r\n                        },\r\n                        rowStyle: {\r\n                            backgroundColor: '#EEE',\r\n                        }\r\n                    }}\r\n                    columns={state.columns}\r\n                    data={state.data}\r\n                    editable={{\r\n\r\n                        onRowUpdate: (newData, oldData) =>\r\n                            new Promise((resolve) => {\r\n                                setTimeout(() => {\r\n                                    const index = oldData.tableData.id;\r\n                                    resolve();\r\n                                    if (oldData) {\r\n                                        setState((prevState) => {\r\n                                            const data = [...prevState.data];\r\n                                            data[data.indexOf(oldData)] = newData;\r\n                                            return { ...prevState, data };\r\n                                        });\r\n                                        updateTableData(newData);\r\n                                    }\r\n                                }, 600);\r\n                            }),\r\n                        onRowDelete: (oldData) =>\r\n                            new Promise((resolve) => {\r\n                                setTimeout(() => {\r\n                                    const index = oldData.tableData.id;\r\n                                    resolve();\r\n                                    setState((prevState) => {\r\n                                        const data = [...prevState.data];\r\n                                        data.splice(data.indexOf(oldData), 1);\r\n                                        return { ...prevState, data };\r\n                                    });\r\n                                    delteTableData(index);\r\n                                }, 600);\r\n                            }),\r\n                    }}\r\n                />)}\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n                <About />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import Particle from \"./component/Particle\"\r\nexport default Particle;","import React, { Component } from \"react\";\r\nimport Particles from 'react-particles-js';\r\n\r\nclass Particle extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Particles\r\n                params={{\r\n                    \"particles\": {\r\n                        \"number\": {\r\n                            \"value\": 50\r\n                        },\r\n                        \"size\": {\r\n                            \"value\": 3\r\n                        }\r\n                    },\r\n                    \"interactivity\": {\r\n                        \"events\": {\r\n                            \"onhover\": {\r\n                                \"enable\": true,\r\n                                \"mode\": \"repulse\"\r\n                            }\r\n                        }\r\n                    }\r\n                }} />\r\n        );\r\n    };\r\n\r\n}\r\nexport default Particle;","import Home from \"./component/Home\";\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { IDBService } from \"../../../Service/IDBService\"\r\nimport Header from \"../../../../src/Components/Header/index\"\r\nimport AddLocation from \"../../AddLocation/index\"\r\nimport ViewLocation from \"../../ViewLocation/index\"\r\nimport Particle from \"../../../Components/Particle/index\"\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this._db = new IDBService()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row bg-dark-blue margin-0 main-Containerr\">\r\n                <div className=\"particle-custom\"><Particle /></div>\r\n                <Header />\r\n                <Switch >\r\n                    <Route exact path=\"/\" render={(props) => <ViewLocation idb={this._db} {...props} />} />\r\n                    <Route exact path=\"/addLocation\" render={(props) => <AddLocation dbKey={new Date().getTime()} {...props} />} />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport Home from \"../src/Routes/Home/index\"\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter >\n      <Route path=\"/\" component={Home} />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}